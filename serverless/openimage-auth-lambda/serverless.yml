service: openimagegenius-auth
frameworkVersion: "3"

package:
  patterns:
    - "!manual_dist"
    - "!node_modules/**"
    - "!auth-sls"
    - "!.serverless"
    - "!.gitignore"
    - "!package.json"
    - "!package-lock.json"
    - "!.requirements.zip"

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage}
  region: eu-central-1
  memorySize: 256
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:UpdateItem"
            - "dynamodb:Query"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.databaseInfo.userTableName}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:custom.databaseInfo.userTableName}/index/*"
  environment:
    # Tables
    USER_TABLE_NAME: ${self:custom.databaseInfo.userTableName}
    REQUEST_TABLE_NAME: ${self:custom.databaseInfo.requestTableName}
    API_TOKEN_TABLE_NAME: ${self:custom.databaseInfo.APITokenTable}
    CONNECTION_TABLE_NAME: ${self:custom.databaseInfo.connectionTableName}
    # Indices
    GOOGLE_USER_ID_INDEX_NAME: ${self:custom.databaseInfo.googleUserIdIndexName}
    USER_GOOGLE_EMAIL_INDEX_NAME: ${self:custom.databaseInfo.userGoogleEmailIndexName}
    REQUEST_UNIQUE_USER_ID_INDEX: ${self:custom.databaseInfo.requestUniqueUserIdIndex}
    API_TOKEN_UNIQUE_USER_ID_INDEX: ${self:custom.databaseInfo.APITokenUniqueUserIdIndex}
    CONNECTION_UNIQUE_USER_ID_INDEX: ${self:custom.databaseInfo.connectionUniqueUserIdIndex}
    CONNECTION_IP_ADRESS_INDEX: ${self:custom.databaseInfo.connectionIpAddressIndex}

    # Others
    GOOGLE_OAUTH_APP_ID: ${self:custom.googleOAuthAppID}
    AUTHORIZER_STAGE: ${self:provider.stage}
    DEVELOPER_GOOGLE_USER_ID: ${ssm:/dev/develop-google-user-id} # Only exists in dev stage
    WS_SECRET_PASS: ${ssm:/dev/websockets-api/admin-creds} # Only exists in dev stage
    # Telegram
    TELEGRAM_TOKEN: ${ssm:/{self:provider.stage}/telegram/token}
    TELEGRAM_CHAT_ID: ${ssm:/{self:provider.stage}/telegram/chat_id}

functions:
  redirect:
    handler: redirect.handler
    events:
      - http:
          path: /
          method: POST
    layers:
      - Ref: PythonRequirementsLambdaLayer
    timeout: 6

plugins:
  - serverless-domain-manager
  - serverless-python-requirements
  - serverless-api-gateway-throttling

custom:
  apiGatewayThrottling:
    maxRequestsPerSecond: 2
    maxConcurrentRequests: 5
  domainName:
    dev: ${self:provider.stage}.api.openimagegenius.com
    prod: api.openimagegenius.com
  customDomain:
    domainName: ${self:custom.domainName.${self:provider.stage}}
    basePath: redirect
    stage: ${self:provider.stage}
    createRoute53Record: true
    endpointType: EDGE
    securityPolicy: tls_1_2
    apiType: rest
  pythonRequirements:
    zip: true
    layer: true
    usePipenv: false
  OAuthAppIDMapping:
    dev: ${ssm:/dev/google-oauth-app-id}
    prod: ${ssm:/prod/google-oauth-app-id}
  googleOAuthAppID: ${self:custom.OAuthAppIDMapping.${self:provider.stage}}
  databaseInfo: ${file(../database/serverless.yml):custom}
