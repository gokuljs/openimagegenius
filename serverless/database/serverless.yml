service: openimagegenius-database
frameworkVersion: "3"

package:
  patterns:
    - "!node_modules/**"
    - "!auth-sls"
    - "!.serverless"
    - "!.gitignore"
    - "!package.json"
    - "!package-lock.json"

provider:
  name: aws
  runtime: python3.8
  stage: ${opt:stage}
  region: eu-central-1

custom:
  # user table
  userTableName: users-table-${self:provider.stage}
  googleUserIdIndexName: google-id-index-${self:provider.stage}
  userGoogleEmailIndexName: user-google-email-index-${self:provider.stage}

  # request table
  requestTableName: request-table-name-${self:provider.stage}
  requestUniqueUserIdIndex: request-unique-user-id-index-${self:provider.stage}

  # GPU user table
  GPUUserTableName: gpu-users-table-${self:provider.stage}
  GPUAPITokenIndex: gpu-api-token-index-${self:provider.stage}
  GPUUniqueUserIdIndex: gpu-unique-user-id-index-${self:provider.stage}

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.userTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: unique_user_id
            AttributeType: S
          - AttributeName: google_user_id
            AttributeType: S
          - AttributeName: user_google_email
            AttributeType: S
        KeySchema:
          - AttributeName: unique_user_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.googleUserIdIndexName}
            KeySchema:
              - AttributeName: google_user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ${self:custom.userGoogleEmailIndexName}
            KeySchema:
              - AttributeName: user_google_email
                KeyType: HASH
            Projection:
              ProjectionType: ALL


    RequestTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.requestTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: request_id
            AttributeType: S
          - AttributeName: requester_unique_user_id
            AttributeType: S
        KeySchema:
          - AttributeName: request_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.requestUniqueUserIdIndex}
            KeySchema:
              - AttributeName: requester_unique_user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    GPUUserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.GPUUserTableName}
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: gpu_user_id
            AttributeType: S
          - AttributeName: api_token
            AttributeType: S
          - AttributeName: unique_user_id
            AttributeType: S
        KeySchema:
          - AttributeName: gpu_user_id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: ${self:custom.GPUAPITokenIndex}
            KeySchema:
              - AttributeName: api_token
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: ${self:custom.GPUUniqueUserIdIndex}
            KeySchema:
              - AttributeName: unique_user_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
